#!/bin/bash

# From https://github.com/networkimprov/omap3-usb-boot-install
#
# Install script to cold flash over USB using an image made of
# subimages for MLO, u-boot, script, dtb, zimage and initrd.
#
# If a sub-image is not specified, an empty one is created.
#
# This tool uses modified omap34usbboot.tar.gz that's available at:
# https://groups.google.com/forum/#!topic/pandaboard/9z5ebHEnuqs
#
# The MLO is generated by u-boot when it's compiled with:
# $ CONFIG_SPL=1 CROSS_COMPILE=arm-linux-gnueabi- make
#
# The u-boot install script is created from install.src with:
# $ mkimage -T script -C none -n "Install script" -d install.src u-boot.script
#
# The mkimage tool comes with u-boot or can be installed with
# u-boot-tools package.

SZ_512K=524288
SZ_1M=1048576
SZ_2M=2097152
SZ_8M=8388608
SZ_20M=20971520

print_options() {
  echo "usage: $0 [-u | --update] [-irootfs.tar.gz | --install=rootfs.tar.gz]"
}

if [ $# -lt 1 ]; then
  print_options
fi

if ! options=$(getopt -o ui:: -l update,install:: -- "$@"); then
  print_options
  exit 1
fi

set -- $options
update=0
install=0
dieid=""

while [ $# -gt 0 ]; do
  case $1 in
  -u|--update)
  update=1
  ;;
  -i|--install)
  file=$2
  install=1
  shift
  ;;
  (--)
  shift
  break
  ;;
  (-*)
  echo "Unknown option $1"
  exit 1
  ;;
  *)
  print_options
  exit 1
  ;;
  esac
  shift
done

cold_flash() {
  if [ -f src/omap34usbboot/out/usbboot ]; then
    prefix=src/omap34usbboot/out
  else
    arch=$(uname -m)
    case "$arch" in
    i?86)
      prefix=arch/i386
    ;;
    x86_64)
      prefix=arch/x86_64
    ;;
    *)
      echo "Unsupported architecture, please build src/omap34usbboot manually"
      exit 2
    ;;
    esac
  fi

  while read -r output; do
    echo $output
    if echo $output | grep "No such file or directory" > /dev/null; then
      exit 4
    fi 
    if echo $output | grep "command not found" > /dev/null; then
      exit 5
    fi 
    if echo $output | grep "unexpected 2ndstage response" > /dev/null; then
      exit 6
    fi 
    dieid=$(echo $output | awk '{ split($0,a,"dieid: "); print substr(a[2], 1, 32) }')
  done < <(sudo $prefix/usbboot $prefix/omap3_aboot install-image 2>&1)

  if [ "$dieid" = "" ]; then
    echo "ERROR: failed to get dieid"
    exit 7
  fi

  return 0
}

update() {
  pad_image() {
    file="$1"
    pad_size="$2"

    if [ ! -f $file ]; then
      echo "Creating empty $file"
      touch $file
    fi

    size=$(du -b "$file" | cut -f 1)
    if [ $size -gt $pad_size ]; then
      echo "ERROR: $file too big"
      exit 2
    fi

    if [ $size -lt $pad_size ]; then
      echo "Padding $file from $size to $pad_size"
      if ! truncate -s $pad_size $file; then
        echo "ERROR: truncate failed for $file"
        exit 3
      fi
    fi
  }

  if ! mkimage -A arm -T script -C none -n "Install script" -d boot.script boot.scr; then
    echo "ERRROR: could not mkimage install script"
    exit 1
  fi

  pad_image u-boot.bin $SZ_512K    # at 0x80008000
  pad_image MLO $SZ_512K           # at 0x80088000
  pad_image u-boot.img $SZ_512K    # at 0x80108000
  pad_image boot.scr $SZ_512K      # at 0x80188000
  pad_image dtb $SZ_2M             # at 0x80208000
  pad_image zimage $SZ_8M          # at 0x80408000
  pad_image initramfs $SZ_20M      # at 0x80c08000

  if ! cat u-boot.bin MLO u-boot.img boot.scr dtb zimage initramfs > install-image; then
    echo "ERROR: failed to create install image"
    exit 3
  fi

  return 0
}

install_on_emmc() {
  emmc=$1
  timeout=45
  echo "Waiting for mass storage device $emmc"
  while [ 1 ]; do
    if [ -b $emmc ]; then
      break
    fi
    ((timeout--))
    if [ "$timeout" -lt "1" ]; then
      echo "ERROR: Timed out waiting for $emmc"
      exit 8
    fi
    sleep 1
  done

  echo "Found mass storage at $emmc"

  return 0
}

if [ "$update" == "1" ]; then
  echo "Update cold flash images..."
  update
fi

if [ "$install" == "1" ]; then
  echo "Cold flashing over USB..."
  cold_flash
fi

if [ "$install" == "1" ] && [ "$dieid" != "" ]; then
  disk_prefix="/dev/disk/by-id/usb-Linux_File-Stor_Gadget_"
  disk_postfix="-0:0"
  disk=$disk_prefix$dieid$disk_postfix
  if install_on_emmc $disk; then
    exit 0
  fi
fi
